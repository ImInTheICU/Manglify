globals()['OOO000O0OOO0O0OOO'] = (
    ("Manglify Obfuscator"),
    ("Version: 0.0.9"),
    ("Author: ImInTheICU"),
    ("Github: github.com/ImInTheICU/Manglify")
)

import random;from datetime import timedelta;OOO0OOOO0O0OOOO0O = bytes;OOOO0OOOOO0OO0O00 = int;OO00OO0O0OOO00O0O = ord;OO000O0OO0O0O00OO = range;OO0O0O0OOO00OOOO0 = chr;O0O0OO00O0OO00000 = len;OOO000000O00O0O00 = globals;O0O00OO00OO000O0O = bytearray;O00OOOO00O0O0000O = globals;O0O0O0OO0O0O0OOO0 = isinstance;O000000OOOO0O00OO = __import__;O00O0O0O0OOO0OO0O = {5469082: '787c0178787c7d7804000104047c7d0404100c141c3a111414101368050104680504006805050768050406680505056805050068050407680507006800006d0505076d0500026d0500066d0502056d0502036d0500036d0500016d0502046d0501076d05020213183e10111414126d0506066d0500056d0502026d0502036d0501016d0501076d0501066d03066c05046806016801066d02046c040268070016183a11141410136805000068050604680506056805050168050506680506036803026d00046c0005056c0001016c0005056c0001026c0006006c0001046c0000016c0005056c0004076c000601121d3e14101114166c0004036c0001056c0002006c0001046c0002016c0000066c06066804016805040668050500680506056805050168050604680504036801066d0500036d0501076d0501056d01036c0005056c0001016c0005056c0001026c0006006c0001046c0000016c0005056c0004076c0006016c04036801000168010505680104026801050368010400680104056801050268010605161c3b1d3e3a7d787800017804007d78047c7d04047c01140910455b58494b5b5c18181a4046561c137c7d7804000178047c7d78047c0178787c1618147d5d5942193b3e4645115958571178787c01047800017878007d7804007d04145c58145b465c1c787c7d04047c0104787c0178780001780419111509105e4259187d78047c7d78787c0104040001787800011d0e3a111414106e6b465e5a585d576e6b1c176d0501076d0502036d00046c05046804016800006d00046c05046804016800006d00046c0504680401680000161d1a6f4757465719041d3a3b4158591178787c7d0404007d0404000178787c7d7818107d04047c7d78787c0104047c7d78787c0114465d114259565f425d4a56421c7c7d04787c7d787800010404007d780400180e3e10111414424414787c7d780400017804000104787c7d7878100f09145f47591c7c7d7804007d04047c7d04787c01047800181458591178787c01047800017878007d7804007d046f7c7d787800010478000104047c7d78787c6c14150d117804007d78787c7d0404007d78787c7d040e3a11141410111414106e6b465e5a585d576e6b1c176d0501076d0502036d00046c05046804016800006d00046c05046804016800006d00046c0504680401131d1e6e425742561c0419', 3282481: '04000004040000050400000404000104040101040500010504010004050101050401000504000104040100040501000504010005040000040401000504010104', 3670167: '04000004040001040401010504010104040100040401010504010005040000050401000504010104040100040500010504010004050100040401000404010005', 2768529: '0500110504051105040911050502110505011105050411050506110706', 5294755: '5d4a5c43585e3b41', 5204264: '5d5c5f14434a5642', 3923573: '04010005040101040401000405000105040100040501010504010004040101050400000404000104040100040500010504010004050101050401000504000104', 5156540: '5859561453425f42', 4765993: '454248535a3a3b17', 1537036: '0600110006100705140702140209110207100304140455', 1169698: '020111030010070c140201140104110201100607140705', 1601180: '0209110251100703140050140308110604100250140201', 3503625: '04000005040000050400000504010105040000050401000404000104050000040401000505000105040000040400010404000005050101050400000404000104', 2964118: '0101110107100400140101140500110505021105050411050405', 3477854: '04010004050100040401000504010104040000040500010404010005050001040400000404000104040000040500000504000004040001040401000505000105', 2317095: '00011105041000050610000500100004011000050410000502100504', 4563237: '5f101e1458193b57', 1511166: '030211020d10075114070514060811030c100304140250', 4876816: '145c183e3e131167', 4670613: '5c51415342525014', 3140257: '04010105040101040401000404010105040100050400000504010005040101040401000405000105040100040501000404010004040100050400010405000004', 4814303: '4542421453425753', 3295406: '04000004050001040400000405000105040000040400010404000004050101050400000505010004040000040400010404010004050001050401000405010004', 2336563: '05010714010811050410020614030314070211070610000500', 2659446: '0500001405010714050106140501051405010114070211050504110d03', 4202760: '5541534e1a555f55', 4974730: '454650531c011d05', 3826130: '04000005040001040400000504000104040000040500010504000104050000040400010405000004040100050400010404010005040000040401000405000105', 3679710: '04010004050100040401000504010104040000040500010404000004040000040401010504010104040100040500010404010004040101050400000404000104', 2352546: '0501051405000014050107140501061405010514050101140704110000', 2802400: '070211050506110504011105050511050506110004100505140400', 3878605: '04000104050000040401000504000104040100050400000404010004050001050401000405010004040100050401010404000004050001040401000404010004', 3444462: '04000004040000040401010504010104040100040500010404010004040101050400000404000104040101040401000404000004040001040401000504000004', 2521857: '050000140501071405010614050105140501011407021105060311050506', 4530046: '4656561c1d4d131d', 3181445: '04000104050000040400010405000004040000040400000504000004040001040401010504010005040100050400000404010004040001050401000504000104', 2974113: '0702110c00100004051000050110000502100004011000050410000407', 1168694: '0451110303100606140600140300110304100701140703', 1219478: '0600110750100304140652140201110250100706140605', 2711134: '0d07110706100004011000050410000502100004051000050010040c', 2427875: '07021105040511050500110505061105040111050504110004100505', 2719987: '0702110504051105040211070610080d1409061405000914050009', 2574810: '0d07110d0c1000040c10000405100504140101011401000414010002', 2624565: '0500001405010514000111070610070514060014070211050405', 3442620: '04010004050100040401000504010104040100040401010504010005040000040400000404000104040100040401010504010004050101040401000504000005', 3254340: '04010004040101050400000404000104040100040500010504010004050100040401000504010104040100040401010504010005040000040400010405000004', 2635679: '05001105050211050504110504051105050011050506110004100004', 1112156: '0600110604100304140201140307110306100705140701', 5217808: '5f46581c50594b5f', 4574584: '5742541c5e555f57', 1800118: '0300110201100606140209140307110306100705140701', 3404022: '04010005040001040401000404010105040100050400000404000004050001040401000504010005040100050400000404010004040001050401000504000104', 2203951: '050103140500001405010514000011050506110504011105050511050506', 2439600: '0001110005100505140400140001110004100505140101', 1796715: '0609110455'};OOO0OOO0OO0O0OO00 = dict;OO00O000O0OO0O000 = None;OOOOOOO000O00OOOO = str;O0OO0000O00000OOO = exec;O0O0OO0O0O0O00OOO = abs;OOO0O00OO000O0OO0 = callable;OOO0O00000OOOOOOO = sum

O000OOOOO0000OOOO = [random, timedelta]; (O000OOOOO0000OOOO)
OOOOOOOOO00OOOO0O = lambda OOO00O0OOOOO000O0: O0OO0000O00000OOO(''.join(O0OO000OO0O00000O(OOOO0OOOOO0OO0O00(OOOOOOO000O00OOOO(O00O0OO00OO000000)[:1]), OOO00000O000O0OOO(O0OOOOOOO00000O0O, OOO00O0OOOOO000O0)) for O00O0OO00OO000000, O0OOOOOOO00000O0O in O00O0O0O0OOO0OO0O.items()), OOO0OOO0OO0O0OO00().update({'OOO000O0OOO0O0OOO': OOO000O0OOO0O0OOO}))
O000O0OOO00OO00OO = lambda OO0OO0OO0O0000000: (O000000OOOO0O00OO('\147\143\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40'.strip()).collect())!=(OO0OO0OO0O0000000) if O000000OOOO0O00OO('\162\141\156\144\157\155\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40'.strip()).randint(OOOO0OOOOO0OO0O00('\61\40\40\40\40\40\40\40\40\40\40\40\40'),OOOO0OOOOO0OO0O00('\61\60\40\40\40\40\40\40\40\40\40\40\40\40\40')) == 9 else O000000OOOO0O00OO('\147\143\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40'.strip()).get_objects()
OO00O0OOOOO0OOOOO = lambda OOOO00OOO0OOO000O: (OOOO00OOO0OOO000O if OOO0O00OO000O0OO0(OOOO00OOO0OOO000O) == OOOO00OOO0OOO000O else OOOO00OOO0OOO000O)

def OOO00000O000O0OOO(OOO0OO00OOOOO0O0O,OOOO00OOOO0OO00O0):
	O0000O00OOO0000O0='\165\164\146\55\70\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40'.strip();O00OOOO0O0O0OOOOO=lambda OOOOOOO0OOOOOOOOO:OOO0OOOO0O0OOOO0O.fromhex(OOOOOOO0OOOOOOOOO);O000OO00OO00OOOOO=lambda OOOO00OOOO0OO00O0:O0O00OO00OO000O0O(OOOOOOO000O00OOOO(OOOO00OOOO0OO00O0),O0000O00OOO0000O0);O0O00O0O0O000000O=lambda x:(lambda y:y+42)(x*3);K=lambda x:(lambda y:y[::-1])(OOOOOOO000O00OOOO(x));L=lambda:(lambda p:(lambda q:q*2)(p+7))(100);M=lambda z:z**3-10*z+7;Q=O0O00O0O0O000000O(23);R=K(12);S=L();T=M(10);N=lambda a1b2z,z2b1:O0O00OO00OO000O0O([a1b2z[O0O00OO00OO000O0O]^z2b1[O0O00OO00OO000O0O%O0O0OO00O0OO00000(z2b1)]for O0O00OO00OO000O0O in OO000O0OO0O0O00OO(O0O0OO00O0OO00000(a1b2z))]);C=(lambda a:a+1)(5);E=(lambda x:x*2-3)(7);F=(lambda y:y//2+10)(20)
	if C>10:F=E*2
	else:E=C+F
	def O(input_value):
		O0O00OO00OO000O0O=input_value;E=0
		for C in OO000O0OO0O0O00OO(0,O0O0OO00O0OO00000(O0O00OO00OO000O0O),2):E+=OO00OO0O0OOO00O0O(O0O00OO00OO000O0O[C])-OO00OO0O0OOO00O0O(O0O00OO00OO000O0O[C-1])if C>0 else 0
		return E
	O('bb990ce35dd867dda26486730488e0ba8343a934678a57ba87e79069a27641fe91589a4b4a34614d035cb9ecc6bf5e7cc1b40222153e9d95483c2c066cf186cd');P=lambda O00O00000OO0O0000:O00O00000OO0O0000.decode(O0000O00OOO0000O0);return P(N(O00OOOO0O0O0OOOOO(OOO0OO00OOOOO0O0O),O000OO00OO00OOOOO(OOOO00OOOO0OO00O0)))

def O0OO000OO0O00000O(OO0000OO0O0O00O00,O0OOOOOOO00000O0O):
	I='z';H='a';G='A';C='';K=lambda x:(lambda y:(lambda z:z(y))(M(y)))(OOO000000O00O0O00().get('y',OO00O000O0OO0O000));M=lambda x:x[::-1];N=OO00OO0O0OOO00O0O(G)+OO00OO0O0OOO00O0O('B')
	def O(x):return(x*64+N)%997
	def P(x):return OOO0O00000OOOOOOO([OOOO0OOOOO0OO0O00(OO00OO0O0OOO00O0O)for OO00OO0O0OOO00O0O in OOOOOOO000O00OOOO(x)])+O(1390)
	def Q(O0OOOOOOO00000O0O):OOOOOOO000O00OOOO=C.join(OO0O0O0OOO00OOOO0(OO00OO0O0OOO00O0O(C)+24)for C in O0OOOOOOO00000O0O);return OOOOOOO000O00OOOO[::-1]
	def R(x):
		if O0O0O0OO0O0O0OOO0(x,OOO0OOOO0O0OOOO0O):return C.join([OO0O0O0OOO00OOOO0(OO00OO0O0OOO00O0O^6)for OO00OO0O0OOO00O0O in x])
		elif O0O0O0OO0O0O0OOO0(x,OOOOOOO000O00OOOO):return C.join([OO0O0O0OOO00OOOO0(OO00OO0O0OOO00O0O(C)+29^-6)for C in x])
		else:return x[::-1]
	def S(x):x=OO00OO0O0OOO00O0O(H)+OO00OO0O0OOO00O0O(I);return OO0O0O0OOO00OOOO0(x%256)
	def V(x):return OOO0O00000OOOOOOO([OOOO0OOOOO0OO0O00(OO00OO0O0OOO00O0O)for OO00OO0O0OOO00O0O in OOOOOOO000O00OOOO(O0O0OO0O0O0O00OOO(x))])
	def T(O0OOOOOOO00000O0O):return C.join([OO0O0O0OOO00OOOO0(OO00OO0O0OOO00O0O(C)+41)for C in O0OOOOOOO00000O0O])[::-1]
	V(4720);K=lambda x:OOO0OOOO0O0OOOO0O.fromhex(x).decode('\165\164\146\55\70\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40')if OO0000OO0O0O00O00==1 else C.join(OO0O0O0OOO00OOOO0(OOOO0OOOOO0OO0O00(OO00OO0O0OOO00O0O))for OO00OO0O0OOO00O0O in O0OOOOOOO00000O0O.split())if OO0000OO0O0O00O00==2 else C.join(OO0O0O0OOO00OOOO0(OOOO0OOOOO0OO0O00(O0OOOOOOO00000O0O[OO00OO0O0OOO00O0O:OO00OO0O0OOO00O0O+8],2))for OO00OO0O0OOO00O0O in OO000O0OO0O0O00OO(0,O0O0OO00O0OO00000(O0OOOOOOO00000O0O),8))if OO0000OO0O0O00O00==3 else C.join([OO0O0O0OOO00OOOO0((OO00OO0O0OOO00O0O(C)-65-13)%26+65)if G<=C<='Z'else OO0O0O0OOO00OOOO0((OO00OO0O0OOO00O0O(C)-97-13)%26+97)if H<=C<=I else C for C in O0OOOOOOO00000O0O])if OO0000OO0O0O00O00==4 else C.join([OO0O0O0OOO00OOOO0(219-OO00OO0O0OOO00O0O(C))if H<=C<=I else OO0O0O0OOO00OOOO0(155-OO00OO0O0OOO00O0O(C))if G<=C<='Z'else C for C in O0OOOOOOO00000O0O])if OO0000OO0O0O00O00==5 else OO00O000O0OO0O000;U=P(101);W=S(256);X=Q(O0OOOOOOO00000O0O);L=T(O0OOOOOOO00000O0O)
	if U>5641:L=L[::-1]
	return K(O0OOOOOOO00000O0O)if O0O0O0OO0O0O0OOO0(O0OOOOOOO00000O0O,OOOOOOO000O00OOOO)else R(OOOOOOO000O00OOOO(OO0000OO0O0O00O00))

for OOOO00OO0O0O0O0O0 in range(OOOO0OOOOO0OO0O00('\61\60\60\60\40\40\40\40\40\40\40\40\40\40'.strip()), OOOO0OOOOO0OO0O00('\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\40\71\71\71\71'.strip())):
    try:
        try: OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(O00OOOO00O0O0000O().get('OOOOOOOOO00OOOO0O', OO00O000O0OO0O000)))))))))))))))))))(OOOO00OO0O0O0O0O0)
        except: OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(OO00O0OOOOO0OOOOO(O00OOOO00O0O0000O().get('O000O0OOO00OO00OO', OO00O000O0OO0O000)))))))))))))))))(OOOO00OO0O0O0O0O0)
    except: pass
